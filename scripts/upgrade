#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

export app=$YNH_APP_INSTANCE_NAME
export final_path="/opt/yunohost/${app}"
export server=$(ynh_app_setting_get $app server)
export port=$(ynh_app_setting_get $app port)
export ssh_user=$(ynh_app_setting_get $app ssh_user)
export backup_path=$(ynh_app_setting_get $app backup_path)
export passphrase=$(ynh_app_setting_get $app passphrase)
export on_calendar=$(ynh_app_setting_get $app on_calendar)
export check_on_calendar=$(ynh_app_setting_get $app check_on_calendar)
export check_read_data_on_calendar=$(ynh_app_setting_get $app check_read_data_on_calendar)
export conf=$(ynh_app_setting_get $app conf)
export data=$(ynh_app_setting_get $app data)
export apps=$(ynh_app_setting_get $app apps)
export allow_extra_space_use=$(ynh_app_setting_get $app allow_extra_space_use)


#=================================================
# CHECK IF AN UPGRADE IS NEEDED
#=================================================
ynh_check_app_version_changed

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors


if grep "${app}.timer" /etc/yunohost/services.yml > /dev/null ; then
    yunohost service remove $app.timer
    systemctl --quiet enable $app.timer
    systemctl start $app.timer
fi

#=================================================
# INSTALL RESTIC
#=================================================
ynh_script_progression --message="Installing restic binary" --weight=7
install_restic

#=================================================
# ACTIVATE BACKUP METHODS
#=================================================
ynh_script_progression --message="Activating backup methods"
mkdir -p /etc/yunohost/hooks.d/backup_method
mkdir -p /usr/share/yunohost/backup_method

#=================================================
# SETUP THE BACKUP METHOD
#=================================================
ynh_script_progression --message="Setting up backup methods"
ynh_configure backup_method "/etc/yunohost/hooks.d/backup_method/05-${app}_app"
ynh_configure check_method "${final_path}/check_method_${app}"

#=================================================
# SETUP LOG SCRIPT
#=================================================
ynh_script_progression --message="Setting up log script"
ynh_configure restic_log "${final_path}/restic_log_${app}"
chmod u+x "${final_path}/restic_log_${app}"

#=================================================
# CONFIGURE CRON
#=================================================
ynh_script_progression --message="Configuring cron" --weight=5
ynh_configure backup-with-restic "/usr/local/bin/backup-with-${app}"
ynh_configure check-restic "${final_path}/check-${app}"
chmod u+x "/usr/local/bin/backup-with-${app}"
chmod u+x "${final_path}/check-${app}"
chmod u+x "${final_path}/check_method_${app}"
ynh_add_systemd_config --service=${app} --template=systemd.service
ynh_add_systemd_config --service=${app}_check --template=systemd_check.service
ynh_add_systemd_config --service=${app}_check_read_data --template=systemd_check_read_data.service
ynh_configure systemd.timer "/etc/systemd/system/${app}.timer"
ynh_configure systemd_check.timer "/etc/systemd/system/${app}_check.timer"
ynh_configure systemd_check_read_data.timer "/etc/systemd/system/${app}_check_read_data.timer"
systemctl --quiet disable ${app}.service
systemctl --quiet disable ${app}_check.service
systemctl --quiet disable ${app}_check_read_data.service
systemctl --quiet enable ${app}.timer
systemctl --quiet enable ${app}_check.timer
systemctl --quiet enable ${app}_check_read_data.timer
systemctl start ${app}.timer
systemctl start ${app}_check.timer
systemctl start ${app}_check_read_data.timer

ynh_script_progression --message="End of upgrade process" --last

#=================================================
# UPGRADE SSH CONFIG
#=================================================

# old versions did not have delimiters in /root/.ssh/config
# making removal in multi-instance cases break the remaining
# instances.
# So we need to add the delimiters if they are missing
grep -q "begin ${app}" /root/.ssh/config
missing_delimiters="$?"
if [ "$missing_delimiters" -eq 1 ];then
  # did not find delimiters so removing old configuration
  sed -e "/Host ${server}/,+6d" /root/.ssh/config -i || true
  cat << EOCONF >> ~/.ssh/config
  # begin $app ssh config
  Host ${server}
    Hostname ${server}
    Port ${port}
    User ${ssh_user}
    IdentityFile ${private_key}
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null
  # end $app ssh config
EOCONF
fi
